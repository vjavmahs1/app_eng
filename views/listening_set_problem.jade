doctype html
html
  head
    meta=(charset="utf-8")
    // lastest jquery
    script(src="//code.jquery.com/jquery-1.12.3.min.js")

    //collapse bootstrap
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js")
    script(src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js")
    link(rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css")
    
    //sortable script
    script(src="//code.jquery.com/ui/1.11.4/jquery-ui.js")
    
    //select 테그 꾸며주는 bootstrap
    script(src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/js/bootstrap-select.min.js")

    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/css/bootstrap-select.min.css")


    
    //img 테그 꾸며주는 bootstrap 
    script(src="//cdnjs.cloudflare.com/ajax/libs/jasny-bootstrap/3.1.3/js/jasny-bootstrap.min.js")
    link(rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/jasny-bootstrap/3.1.3/css/jasny-bootstrap.min.css")
    
    
    link(rel='stylesheet' type ='text/css' href='/css/listening_promake.style.css')
    link(rel='stylesheet' type ='text/css' href='/css/header.style.css')
    

  body
    include ./header.jade
    

    div(class="well well-lg")
      fieldset(class="form-group")
        label 문제집 설명
        input(type="text" class="form-control" name = "l_questionset_name" id="ex3" placeholder="Example input" value =l_questionset.l_questionset_name)
        br
        label 오디오 파일
        br
        audio(controls id="audio_play")
          source(src=l_questionset.l_questionset_audiopath)
        br
        br
        br
        button(class="btn btn-default" id="setEdit" data-id = l_questionset.l_questionset_id) 문제집 수정  
        button(class="btn btn-primary" data-toggle="collapse" data-target="#collapseOne" data-parent="#searchAccordion") 문제 추가
        a(href="/listening/set") 
          button(class="btn btn-success" id="goingSet") submit
        
    div(class="alert alert-success" id="produce-alert") 
      strong  문제가 성공적으로 생성됬습니다. 
      
    div(class="alert alert-success" id="edit-alert")
      strong  문제가 성공적으로 수정됬습니다. 
      
    div(class="alert alert-success" id="delete-alert")
      strong  문제가 성공적으로 삭제됬습니다. 
    div(class="container")
      div(class="accordion" id="searchAccordion")
        div(class="accordion-group")
          div(class="accordion-heading")
            div(id="collapseOne" class="accordion-body collapse")
              div(class="accordion-inner")
                form(role ="form"  action='/listening/set/'+l_questionset.l_questionset_id method="POST"  id = "target" enctype="multipart/form-data" data-id= "#{JSON.stringify(l_questionset.l_questionset_id)}")
                  div(class="row-fluid")
                    fieldset(class="form-group")
                      select(name="l_questiontype_id" class="selectpicker drop" id="questionType0" required)
                        option(value="" selected disabled) 문제유형을 선택하세요
                        each l_questiontype in l_questiontypes
                          option(value =l_questiontype.l_questiontype_id id="opt")=l_questiontype.l_questiontype_type 
                    fieldset(class="form-group")
                      label 문제
                      input(class="form-control" id="ex3" name="l_question_topic" placeholder="문제를 입력해주세요" type="text" required)
                    label(class="imagelabel") 이미지 선택
                    fieldset(class="imageTagGroup")
                      div(class="fileinput fileinput-new" data-provides="fileinput")
                        div(class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 300px; height: 180px;")
                        div
                          input(type="file" name="l_userfile_image" class="form-control-file" id="image_file" accept="image/*")
                    fieldset(class="form-group")
                      label 보기 입력
                      br
                      ul(class="sortable")
                        li
                          input(type = "text" name = "l_question_asw1" class="form-control" id="ex3" placeholder="보기 :" required)
                        li
                          input(type = "text" name = "l_question_asw2" class="form-control" id="ex3" placeholder="보기 :" required)
                        li
                          input(type = "text" name = "l_question_asw3" class="form-control" id="ex3" placeholder="보기 :" required)
                        li
                          input(type = "text" name = "l_question_asw4" class="form-control" id="ex3" placeholder="보기 :" required)
                        li
                          input(type = "text" name = "l_question_asw5" class="form-control" id="ex3" placeholder="보기 :" required)
                      label 정답
                      select(name="l_question_solution" class="selectpicker" required)
                        option(value="" selected disabled) 정답을 선택하세요
                        option(value="1") 1
                        option(value="2") 2
                        option(value="3") 3
                        option(value="4") 4
                        option(value="5") 5
                    fieldset(class="form-group")
                      label 설명
                      textarea(name = "l_question_explain" id="explain" placeholder="설명 :" class="form-control" rows="7")
                      
                  input(type="submit" class="btn btn-info" value="문제 생성")
                  br
                  br
                  
    div(class="well well-lg")
      div(class="panel-group" id="accordion")
      - var n = 0    
          each question in l_questions
            - var problem = ++n +"번 문제"  
            div(class="panel panel-default")
              div(class="panel-heading")
                h4(class="panel-title")
                  a(data-toggle="collapse" data-parent="#accordion" aria-expanded="true" href="#collapse"+n)=problem
              div(id="collapse"+n class="panel-collapse collapse")
                div(class="panel-body")
                  form(role ="form"  action='/listening/problem/edit/'+ question.l_question_id method="POST"  class = "formtags" enctype="multipart/form-data" data-id= "#{JSON.stringify(question.l_question_id)}")
                    div(class="row-fluid")
                      fieldset(class="form-group")
                        select(name="l_questiontype_id" class="selectpicker drop down" id="questionType"+n)
                          each l_questiontype in l_questiontypes
                            if(l_questiontype.l_questiontype_id == question.l_questiontype_id)
                              option(value =l_questiontype.l_questiontype_id selected = l_questiontype.l_questiontype_type)=l_questiontype.l_questiontype_type
                            else  
                              option(value =l_questiontype.l_questiontype_id id="opt")=l_questiontype.l_questiontype_type 
                      fieldset(class="form-group")
                        label 문제
                        input(class="form-control" id="ex3" name="l_question_topic" placeholder="문제를 입력해주세요" type="text" required value= question.l_question_topic)
                        
                        label(class="imagelabel") 이미지 선택
                        fieldset(class="imageTagGroup")
                          div(class="fileinput fileinput-new " data-provides="fileinput")
                            div(class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 300px; height: 180px;")
                              img(src=question.l_question_imagepath)
                            div                    
                              input(type="file" name="l_userfile_image" class="form-control-file" id="image_file" accept="image/*")
                      fieldset(class="form-group")
                        label 보기 입력
                        br
                        ul(class="sortable")
                          li
                            input(type = "text" name = "l_question_asw1" class="form-control" placeholder="보기 :" required value= question.l_question_asw1)
                          li
                            input(type = "text" name = "l_question_asw2" class="form-control" placeholder="보기 :" required value= question.l_question_asw2)
                          li
                            input(type = "text" name = "l_question_asw3" class="form-control" placeholder="보기 :" required value= question.l_question_asw3)
                          li
                            input(type = "text" name = "l_question_asw4" class="form-control" placeholder="보기 :" required value= question.l_question_asw4)
                          li
                            input(type = "text" name = "l_question_asw5" class="form-control" placeholder="보기 :" required value= question.l_question_asw5)
                        label 정답
                        select(name="l_question_solution" class="selectpicker")
                          - var m = 1
                            while m < 6
                              if(m== question.l_question_solution)
                                option(value=m selected)= m++
                              else
                                option(value=m)= m++
                        input(id="questionsset_id" type="hidden" name="l_questionset_id" value=l_questionset.l_questionset_id)      
                      fieldset(class="form-group")
                        label 설명
                        textarea(name = "l_question_explain" id="explain" placeholder="설명 :" class="form-control" rows="7")
                          = question.l_question_explain  
                        
                    input(type="submit" class="btn btn-primary" value="Update")
                    button(type="button" id="deButton" class="btn btn-danger " data-toggle="modal" data-target="#myModal" data-id= "#{JSON.stringify(question.l_question_id)}") 삭제
    div(id="myModal" class="modal fade" role="dialog")
      div(class="modal-dialog")
        div(class="modal-content")
          div(class="modal-header")
            button(type="button" class="close" data-dismiss="modal") &times;
            h4(class="modal-title") 문제 삭제      
          div(class="modal-body")
            p 문제를 삭제하시겠습니까?    
          div(class="modal-footer")
            button(type="button"  class="btn btn-success "  data-dismiss="modal") 취소
            button(type="button" class="btn btn-danger "  id = "dele" data-dismiss="modal" ) 삭제
                      
                      

      
  


    script.
      function playFile(obj) {
        var sound = document.getElementById('audio_play');
        var reader = new FileReader();
        reader.onload = (function(audio) {return function(e) {audio.src = e.target.result;};})(sound);
        reader.addEventListener('load', function() {
      });
        reader.readAsDataURL(obj.files[0]);
      }
      
      $(".sortable").sortable({
        stop: function(event, ui){
            var cnt = 1;
            $(this).children('li').each(function(){
                $(this).children('input:first').attr('name', "l_question_asw"+cnt+"");
                cnt++;
                });
            }
      });
        var droplist = $('.drop')
        for(var i=0; i<droplist.length; i++){
          (function(i) {
            droplist[i].addEventListener('change', function(event){
              if($('#questionType'+i).val() ==3){
                var imagelabel =$('.imagelabel')
                var imageTagGroup =$('.imageTagGroup')
                imagelabel[i].style.display="block"
                imageTagGroup[i].style.display="block"

              }else{
                var imagelabel =$('.imagelabel')
                var imageTagGroup =$('.imageTagGroup')
                console.log(imagelabel[i]);
                imagelabel[i].style.display="none"
                imageTagGroup[i].style.display="none"
              }
            })
           }(i));
        }
        
        $(function(){
          var droplist = $('.drop')
          for(var i=0; i<droplist.length; i++){
            (function(i) {
              
              if($('#questionType'+i).val() ==3){
                var imagelabel =$('.imagelabel')
                var imageTagGroup =$('.imageTagGroup')
                imagelabel[i].style.display="block"
                imageTagGroup[i].style.display="block"
              }
              
            }(i))
          }
        });  
        $("#setEdit").click(function(e){
          var proId = $(this).data('id');
          window.location.replace("/listening/set/edit/"+proId);


        });
        
        $("#target").submit(function(e) {
        $('.down').each(function() {
          var select = $(this);
          console.log(select.val());
          if(select.val()== "null"){
            e.preventDefault(); // avoid to execute the actual submit of the form.
            
          }
        });
        })
        
        //updating problem using ajax
        $('.formtags').each(function () {
          var formtag = this;
          var form = $(formtag)
          form.on('submit',(function(e){
            var formData = new FormData($(this)[0]);
            var proId = $(this).data('id');
            var url = "/listening/problem/edit/"+proId
            $.ajax({
                   type: "POST",
                   url: url,
                   data: formData,
                   contentType:'text/html',
                   cache: false,
                   contentType: false,
                   processData: false,
                   success: function(data)
                   {
  
                    
                     var $dom = $(document.createElement("html"));
                     $dom[0].innerHTML = data;

                     var $body = $dom.find("body");
                     $('body').html($body[0].innerHTML);
                    



                    $('.selectpicker').selectpicker('render').selectpicker('refresh');

                    $('.collapse').collapse('hide');

                    $("#edit-alert").css({'display':'block'});

                    $("#edit-alert").fadeTo(2000, 500).slideUp(500, function(){

                    $("#edit-alert").css({'display':'none'});


                    });
                   }

                 });

            e.preventDefault(); // avoid to execute the actual submit of the form.
          })
          )
          })
          
          
      //makeing listening problem using ajax
        // this is the id of the form
      $("#target").submit(function(e) {
        var formData = new FormData($(this)[0]);
          var proId = $(this).data('id');
          var url = proId; // the script where you handle the form input.

          $.ajax({
                 type: "POST",
                 url: url,
                 data: formData, // serializes the form's elements.
                 //for upload file in ajax
                 cache: false,
                 contentType: false,
                 processData: false,
                 success: function(data)
                 {
                
                   
                    var $dom = $(document.createElement("html"));
                    $dom[0].innerHTML = data;

                    var $body = $dom.find("body");
                    $('body').html($body[0].innerHTML);
                    
                     
                    $('.selectpicker').selectpicker('render').selectpicker('refresh');


                     $('.collapse').collapse('hide');
                    $("#produce-alert").css({'display':'block'});


                    $("#produce-alert").fadeTo(2000, 1300).slideUp(1300, function(){
                      $("#produce-alert").css({'display':'none'});


                    });

                 }
               });
          e.preventDefault(); // avoid to execute the actual submit of the form.
      });
      
      //deleting listening problem using ajax
      $(document).on("click", "#deButton", function () {
        var proId = $(this).data('id');
          var one = document.getElementById('dele')
          one.addEventListener('click', function(){
            removeItem(proId);

          })
        });
        
        
        //remove problem
        function removeItem(id) {
          var questionset_id = $("#questionsset_id").val();
          $.ajax({
          url:'problem/delete/'+id,
          type:"post",
          data: {questionset_id: questionset_id},

          success:function(data) {
            
            
             var $dom = $(document.createElement("html"));
             $dom[0].innerHTML = data;

             var $body = $dom.find("body");
             $('body').html($body[0].innerHTML);
             


             $('.selectpicker').selectpicker('render').selectpicker('refresh');

              $('.collapse').collapse('hide');
             $("#delete-alert").css({'display':'block'});


             $("#delete-alert").fadeTo(2000, 1300).slideUp(1300, function(){
               $("#delete-alert").css({'display':'none'});


             });


            }
          });
        }
    
    
    
      
        
      
        
      
 
            


  

    

    
